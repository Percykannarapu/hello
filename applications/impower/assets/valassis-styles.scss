@import "~assets/sass/variables/theme/theme_light";
@import "~assets/valassis-variables";
@import "~assets/sass/theme/extensions/mixins";
@import "~assets/sass/theme/designer/mixins";

.p-input-filled {
  .p-float-label {
    .p-inputtext.p-multiselect-filter {
      padding: $inputPadding;
      padding-right: 1.75rem;
      padding-left: 0.25rem;
    }
  }
}

.p-inputgroup .p-inputtext.p-multiselect-filter {
  width: 100% !important;
}

.p-button.p-button-inverse, .p-buttonset.p-button-inverse > .p-button, .p-splitbutton.p-button-inverse > .p-button {
  &.p-button-outlined {
    background-color: transparent;
    color: $inverseButtonBg;
    border: $outlinedButtonBorder;

    &:enabled:hover {
      background: rgba($inverseButtonBg, $textButtonHoverBgOpacity);
      color: $inverseButtonBg;
      border: $outlinedButtonBorder;
    }

    &:enabled:active {
      background: rgba($inverseButtonBg, $textButtonActiveBgOpacity);
      color: $inverseButtonBg;
      border: $outlinedButtonBorder;
    }
  }

  &.p-button-text {
    background-color: transparent;
    color: $inverseButtonBg;
    border-color: transparent;

    &:enabled:hover {
      background: rgba($inverseButtonBg, $textButtonHoverBgOpacity);
      border-color: transparent;
      color: $inverseButtonBg;
    }

    &:enabled:active {
      background: rgba($inverseButtonBg, $textButtonActiveBgOpacity);
      border-color: transparent;
      color: $inverseButtonBg;
    }
  }
}

.p-confirm-dialog-accept {
  @extend .p-button
}

.p-dialog-mask-scrollblocker {
  overflow-y: auto;
}

.p-confirm-dialog-reject {
  @extend .p-button-outlined
}

form.ng-touched {
  .p-inputgroup {
    .p-float-label {
      p-dropdown.ng-invalid {
        .p-dropdown {
          @include invalid-filled-input-wrapper();
          .p-dropdown-trigger-icon {
            color: $errorColor;
          }
        }
        + label {
          color: $errorColor;
        }
      }
      input.ng-invalid {
        @include invalid-filled-input();

        + label {
          color: $errorColor;
        }
      }
      ~ span.p-inputgroup-addon {
        @include invalid-filled-input();

        i {
          color: $errorColor;
        }
      }
    }
  }
  .ng-invalid {
    > .p-inputgroup {
      .p-float-label {
        p-dropdown {
          .p-dropdown {
            @include invalid-filled-input-wrapper();
            .p-dropdown-trigger-icon {
              color: $errorColor;
            }
          }
          + label {
            color: $errorColor;
          }
        }
        input {
          @include invalid-filled-input();

          + label {
            color: $errorColor;
          }
        }
        ~ span.p-inputgroup-addon {
          @include invalid-filled-input();

          i {
            color: $errorColor
          }
        }
      }
    }
  }
}

// adding an additional feature to PrimeNg : xs buttons
.p-button {
  &.p-button-xs {
    @include scaledFontSize(1.15rem, $scaleXS);
    @include scaledPadding($buttonPadding, $scaleXS);

    &.p-button-icon-only {
      width: $buttonIconOnlyWidth * $scaleXS;
      height: $buttonIconOnlyWidth *  $scaleXS;
    }
    .p-button-icon {
      @include scaledFontSize(1.15rem, $scaleXS);
    }
  }
}

// overriding float label position
.p-float-label {
  margin-top: unset;
}

.p-float-label input:focus ~ label,
.p-float-label input.p-filled ~ label,
.p-float-label textarea:focus ~ label,
.p-float-label textarea.p-filled ~ label,
.p-float-label .p-inputwrapper-focus ~ label,
.p-float-label .p-inputwrapper-filled ~ label {
  top: -1rem !important;
}

.p-input-filled {
  .p-float-label {
    input:focus ~ label,
    input.p-filled ~ label,
    textarea:focus ~ label,
    textarea.p-filled ~ label,
    .p-inputwrapper-focus ~ label,
    .p-inputwrapper-filled ~ label {
      top: -1rem !important;
    }
  }
}

.p-inputgroup .p-float-label {
  p-dropdown {
    width: 100%;
    .p-dropdown {
      width: 100%;
      height: 2rem;
      align-items: center;
    }
  }
  p-multiSelect {
    width: 100%;
    .p-multiselect {
      width: 100%;
      height: 2rem;
      align-items: center;
    }
  }
}

// hack for primeng regression
// https://github.com/primefaces/primeng/issues/9453
.p-accordion-tab:not(.p-accordion-tab-active) {
  .p-toggleable-content {
    height: 0;
    overflow: hidden;
  }
}

.p-accordion-tab.p-accordion-tab-active {
  .p-toggleable-content {
    height: auto !important;
  }
}
// end hack

.p-datatable {
  .p-datatable-header {
    .p-multiselect:not(:hover) {
      .p-multiselect-trigger {
        color: $tableHeaderTextColor;
      }
    }
    .p-dropdown:not(:hover) {
      .p-dropdown-trigger {
        color: $tableHeaderTextColor;
      }
    }
    .p-multiselect:hover {
      .p-multiselect-label {
        color: $inputListTextColor;
      }
    }
    .p-dropdown:hover {
      .p-dropdown-label {
        color: $inputListTextColor;
      }
    }
    .p-float-label {
      > .p-inputtext:not(:hover) {
        ~ label {
          color: $tableHeaderTextColor;
        }
      }
      > .p-inputtext.p-filled:hover {
        ~ label {
          color : $tableHeaderTextColor;
        }
      }
      > p-dropdown {
        ~ label {
          color : $tableHeaderTextColor;
        }
      }
    }
    .p-inputtext {
      color: $tableHeaderTextColor;
      &.p-filled:focus,
      &.p-filled:hover {
        color: $inputTextColor;
      }
    }
  }
  .p-datatable-scrollable-header-box {
    padding-right: unset !important;
  }
  .p-datatable-scrollable-footer-box {
    padding-right: unset !important;
  }
}

.p-tree {
  padding: 0.75rem 0;
  .p-treenode {
    &.val-protected-node {
      .p-checkbox.p-checkbox-disabled {
        display: inline-flex;
        opacity: 0.25;
      }
    }
    .p-checkbox.p-checkbox-disabled {
      display: none;
    }
  }
}

.p-tooltip {
  cursor: none !important;
}

.p-field p-inputSwitch + label {
  padding-left: 1rem;
}

.p-toast.p-toast-top-right {
  top: 125px !important;
  .p-toast-detail {
    white-space: pre-line;
  }
}

.listbox-item{
  .p-listbox .p-listbox-list .p-listbox-item {
  user-select: text;
  }
}

.dropdown-copy{
  .p-component, .p-component * {
    box-sizing: border-box;
    user-select: text;
  }
}

p-checkbox {
  label {
    cursor: pointer;
  }
}

